{
  "info": {
    "name": "Multi-Agent System API Tests",
    "description": "Comprehensive test collection for the Multi-Agent Orchestrator API - Now supports user profiles and session-less processing",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "techProfessionalProfile",
      "value": "8a1b2c3d-4e5f-6789-abcd-ef1234567890",
      "type": "string"
    },
    {
      "key": "businessOwnerProfile",
      "value": "9b2c3d4e-5f67-8901-bcde-f23456789012",
      "type": "string"
    },
    {
      "key": "studentAthleteProfile",
      "value": "5c7d8e9f-1234-5678-9abc-def012345678",
      "type": "string"
    },
    {
      "key": "executiveProfile",
      "value": "1a2b3c4d-5e6f-7890-abcd-ef1234567890",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        },
        "description": "Basic health check to ensure the server is running"
      },
      "response": []
    },
    {
      "name": "2. Direct Message - No Profile",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I need help optimizing my e-commerce checkout process to reduce cart abandonment.\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Direct message processing without user profile (should trigger Analytics Specialist)"
      },
      "response": []
    },
    {
      "name": "3. Direct Message - Tech Professional Profile",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I want to implement personalized product recommendations using machine learning. What's the best approach for our tech stack?\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Message with tech professional profile (Sarah Johnson - 32, San Francisco, Tech Professional) - should get more technical recommendations"
      },
      "response": []
    },
    {
      "name": "4. Direct Message - Business Owner Profile",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"How can I improve my online store's conversion rate? I'm concerned about customer privacy and don't want invasive tracking.\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Message with privacy-conscious business owner profile (Miguel Rodriguez - 45, Austin, Small Business) - should respect privacy preferences"
      },
      "response": []
    },
    {
      "name": "5. Analytics Request - With Profile",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"Analyze our current funnel: 10k visitors, 500 add-to-cart, 50 purchases. Mobile traffic is 70% but mobile conversion is only 1%. What's wrong?\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Analytics request with specific metrics (should trigger Analytics Specialist)"
      },
      "response": []
    },
    {
      "name": "6. Persuasion Content Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"Create compelling messaging for abandoned cart emails. Our target audience is busy professionals aged 25-45 who value time-saving solutions.\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Persuasion and messaging request (should trigger Persuasion Specialist)"
      },
      "response": []
    },
    {
      "name": "7. Content Generation Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"Generate product descriptions for our premium wireless headphones. Focus on noise cancellation, battery life, and professional use cases.\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Product content generation request (should trigger Content Generation Specialist)"
      },
      "response": []
    },
    {
      "name": "8. UI/UX Design Optimization",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"Our checkout page has a 68% abandonment rate. Design a better checkout flow that builds trust and reduces friction for older demographics.\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "UI/UX optimization request (should trigger HTML/CSS Design Specialist)"
      },
      "response": []
    },
    {
      "name": "9. Ethics Review Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"Review our marketing campaign for ethical compliance. We're using urgency tactics and limited-time offers. Are these practices ethical?\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Ethics and compliance review (should trigger Ethics Specialist)"
      },
      "response": []
    },
    {
      "name": "10. Legacy Start Conversation - With Profile",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"Help me create a customer acquisition strategy for my SaaS product.\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/start",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "start"]
        },
        "description": "Legacy start endpoint (backward compatibility) - now processes directly without creating sessions"
      },
      "response": []
    },
    {
      "name": "11. Legacy Continue Conversation",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"What metrics should I track for my conversion optimization efforts?\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/any-id/continue",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "any-id", "continue"]
        },
        "description": "Legacy continue endpoint (backward compatibility) - ignores session ID and processes directly"
      },
      "response": []
    },
    {
      "name": "12. Empty Message Test",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Test with no message (should get default greeting with profile context)"
      },
      "response": []
    },
    {
      "name": "13. Invalid Profile ID Test",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"This should work even with invalid profile\",\n  \"profileId\": \"invalid-profile-id\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Test with invalid profile ID (should process without profile context)"
      },
      "response": []
    },
    {
      "name": "14. Complex Multi-Domain Question",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I want to build an e-commerce platform that's both high-converting and ethical. How do I balance persuasive design with transparent, honest marketing?\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Complex question that might trigger multiple specialists or synthesis"
      },
      "response": []
    },
    {
      "name": "15. Error Test - Missing Message",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"   \",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Test error handling with empty/whitespace message (should return 400 error)"
      },
      "response": []
    },
    {
      "name": "16. Get Conversation (Legacy)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/any-session-id",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "any-session-id"]
        },
        "description": "Legacy endpoint - now returns 404 with info about new architecture"
      },
      "response": []
    },
    {
      "name": "17. List All Conversations (Legacy)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation"]
        },
        "description": "Legacy endpoint - now returns empty array with info about new architecture"
      },
      "response": []
    },
    {
      "name": "18. Delete Conversation (Legacy)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/any-session-id",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "any-session-id"]
        },
        "description": "Legacy endpoint - now returns success with info about new architecture"
      },
      "response": []
    },
    {
      "name": "19. Product Recommendation - Golf Enthusiast",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I'm looking for golf equipment recommendations. What would you suggest for improving my game?\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Golf product recommendations for Sarah (tech professional, intermediate level, premium budget, prefers TaylorMade/Wilson)"
      },
      "response": []
    },
    {
      "name": "20. Product Recommendation - Hockey Player",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I need new hockey gear for the upcoming season. What equipment should I buy?\",\n  \"profileId\": \"{{studentAthleteProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Hockey product recommendations for Alex (student, advanced level, budget-conscious, prefers Bauer/CCM)"
      },
      "response": []
    },
    {
      "name": "21. Product Recommendation - Soccer Parent",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"My kid needs soccer equipment. Can you recommend some good products for recreational play?\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Soccer product recommendations for Miguel (business owner, recreational level, moderate budget, prefers Nike/Adidas)"
      },
      "response": []
    },
    {
      "name": "22. Product Recommendation - Luxury Golf",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I want the best golf equipment money can buy. Show me your premium recommendations.\",\n  \"profileId\": \"{{executiveProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Luxury golf product recommendations for Jennifer (executive, professional level, luxury budget, prefers Callaway/Titleist/Wilson)"
      },
      "response": []
    },
    {
      "name": "23. Product Recommendation - No Profile",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"What sports equipment would you recommend?\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Product recommendations without user profile (should provide general recommendations or ask for preferences)"
      },
      "response": []
    },
    {
      "name": "24. Product Recommendation - Budget Shopping",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I'm on a tight budget but want to get into hockey. What affordable equipment do you recommend?\",\n  \"profileId\": \"{{studentAthleteProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Budget-focused product recommendations for Alex (student athlete with budget constraints)"
      },
      "response": []
    },
    {
      "name": "25. Background Recommendations Test - First Call",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"How can I improve my e-commerce conversion rate?\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "First call - should generate background recommendations and cache them. Check response for 'cached: false' and 'generatedRecommendations' count."
      },
      "response": []
    },
    {
      "name": "26. Background Recommendations Test - Cached Call",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"How can I improve my e-commerce conversion rate?\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Identical second call - should use cached recommendations. Check response for 'cached: true'. Should be faster than the first call."
      },
      "response": []
    },
    {
      "name": "27. Multi-Approach Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I want to launch a new product but need help with marketing strategy, ethical considerations, and product descriptions.\",\n  \"profileId\": \"{{executiveProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Complex multi-domain request that should trigger multiple specialist recommendations in background. Maya should select the best approach."
      },
      "response": []
    },
    {
      "name": "28. Different Profile Same Message",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"How can I improve my e-commerce conversion rate?\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Same message as test 25 but different profile - should generate new recommendations (not cached) because profile affects the hash."
      },
      "response": []
    },
    {
      "name": "29. Get Cached Recommendations - Tech Professional",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"How can I improve my e-commerce conversion rate?\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations"]
        },
        "description": "Retrieve cached recommendations for the tech professional profile. Run this after test 25 to see the background-generated recommendations."
      },
      "response": []
    },
    {
      "name": "30. Get Cached Recommendations - Business Owner",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"How can I improve my e-commerce conversion rate?\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations"]
        },
        "description": "Retrieve cached recommendations for the business owner profile. Run this after test 28 to see different recommendations for same message but different profile."
      },
      "response": []
    },
    {
      "name": "31. Get Cached Recommendations - Not Found",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"This message was never sent before so no cache should exist\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations"]
        },
        "description": "Try to retrieve recommendations for a message that was never processed - should return 404 not found."
      },
      "response": []
    },
    {
      "name": "32. Get Cache Statistics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/cache/statistics",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "cache", "statistics"]
        },
        "description": "Get cache statistics including total cached requests, cache age limits, and entry timestamps."
      },
      "response": []
    },
    {
      "name": "33. Get Cache Entries",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/cache/entries",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "cache", "entries"]
        },
        "description": "Get overview of all cached entries with hashes, timestamps, and approach types without exposing full content."
      },
      "response": []
    },
    {
      "name": "34. Clear Cache",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/cache",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "cache"]
        },
        "description": "Clear all cached recommendations. Use this to reset cache for testing or cleanup."
      },
      "response": []
    },
    {
      "name": "35. Verify Cache Cleared",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/cache/statistics",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "cache", "statistics"]
        },
        "description": "Verify that cache was cleared - should show 0 total cached requests."
      },
      "response": []
    },
    {
      "name": "36. Generate Persona-Based Recommendations",
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/generate",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "generate"]
        },
        "description": "Generate recommendations for all personas and products. This analyzes all user profiles (ignoring profile IDs) and creates a recommendation array. May take a few seconds to complete."
      },
      "response": []
    },
    {
      "name": "37. Get All Stored Recommendations",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/list",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "list"]
        },
        "description": "Get all stored recommendations without any filtering. Shows the complete recommendation array."
      },
      "response": []
    },
    {
      "name": "38. Get Golf Recommendations",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/list?sport=golf&limit=5",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "list"],
          "query": [
            {
              "key": "sport",
              "value": "golf"
            },
            {
              "key": "limit",
              "value": "5"
            }
          ]
        },
        "description": "Get recommendations filtered by golf interest with a limit of 5 results."
      },
      "response": []
    },
    {
      "name": "39. Get Budget-Conscious Recommendations",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/list?budget=budget&skill=intermediate",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "list"],
          "query": [
            {
              "key": "budget",
              "value": "budget"
            },
            {
              "key": "skill",
              "value": "intermediate"
            }
          ]
        },
        "description": "Get recommendations for budget-conscious users with intermediate skill level."
      },
      "response": []
    },
    {
      "name": "40. Get Premium Recommendations",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/list?budget=luxury&segment=executive-professional",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "list"],
          "query": [
            {
              "key": "budget",
              "value": "luxury"
            },
            {
              "key": "segment",
              "value": "executive-professional"
            }
          ]
        },
        "description": "Get recommendations for luxury budget users in the executive-professional segment."
      },
      "response": []
    },
    {
      "name": "41. Quick Website Recommendations - No Filters",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/quick",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "quick"]
        },
        "description": "Quick recommendations for website visitors with no filtering. Returns simplified format optimized for website display."
      },
      "response": []
    },
    {
      "name": "42. Quick Website Recommendations - Hockey",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/quick?sport=hockey&limit=3",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "quick"],
          "query": [
            {
              "key": "sport",
              "value": "hockey"
            },
            {
              "key": "limit",
              "value": "3"
            }
          ]
        },
        "description": "Quick hockey recommendations for website visitors with minimal data requirement."
      },
      "response": []
    },
    {
      "name": "43. Quick Website Recommendations - Budget Tennis",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/quick?sport=tennis&budget=budget&limit=2",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "quick"],
          "query": [
            {
              "key": "sport",
              "value": "tennis"
            },
            {
              "key": "budget",
              "value": "budget"
            },
            {
              "key": "limit",
              "value": "2"
            }
          ]
        },
        "description": "Quick budget tennis recommendations for website visitors."
      },
      "response": []
    },
    {
      "name": "44. Get Recommendation Statistics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/stats",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "stats"]
        },
        "description": "Get statistics about stored recommendations including total count, persona-based vs category-based recommendations, and generation timestamps."
      },
      "response": []
    },
    {
      "name": "45. Clear All Recommendations",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations"]
        },
        "description": "Clear all stored recommendations from the system. Use this for cleanup or to force regeneration."
      },
      "response": []
    },
    {
      "name": "46. Verify Recommendations Cleared",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/conversation/recommendations/stats",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "recommendations", "stats"]
        },
        "description": "Verify that recommendations were cleared - should show 0 total recommendations."
      },
      "response": []
    },
    {
      "name": "47. Fast Product Recommendation - Golf (New Agent)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I need golf equipment recommendations for my game\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Test new fast product recommendation flow - should use recommendation engine directly instead of multi-agent orchestrator. Response should be from 'Maya (Quick Recommendation Agent)'."
      },
      "response": []
    },
    {
      "name": "48. Fast Product Recommendation - Hockey Budget (New Agent)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"Looking for budget hockey gear recommendations\",\n  \"profileId\": \"{{studentAthleteProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Test fast hockey recommendations with budget keyword - should extract both sport and budget from message and use recommendation engine."
      },
      "response": []
    },
    {
      "name": "49. Fast Product Recommendation - No Profile (New Agent)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"What sports equipment would you recommend for tennis?\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Test product recommendations without user profile - should still work using category-based recommendations."
      },
      "response": []
    },
    {
      "name": "50. Non-Product Question (Multi-Agent Flow)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"How can I optimize my website's conversion rate and reduce cart abandonment?\",\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Test non-product question - should NOT use recommendation engine and instead go through multi-agent orchestrator for analytics/conversion optimization."
      },
      "response": []
    },
    {
      "name": "51. Mixed Request - Product + Strategy",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"I need product recommendations for my golf equipment store and marketing strategy advice\",\n  \"profileId\": \"{{businessOwnerProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Test mixed request with product recommendation keywords - should be detected as product request and use recommendation engine (since product keywords are present)."
      },
      "response": []
    },
    {
      "name": "52. Empty Message Test (New Agent)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"profileId\": \"{{techProfessionalProfile}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/conversation/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "conversation", "message"]
        },
        "description": "Test empty message with new agent - should get updated greeting focused on sports equipment recommendations."
      },
      "response": []
    }
  ]
} 